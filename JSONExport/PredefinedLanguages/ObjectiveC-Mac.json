{
    "langName": "ObjectiveC - Mac",
    "displayLangName": "ObjectiveC - Mac",
    "briefDescription": "Defines how your JSON objects can be mapped to Objective-c classes using the built-in NSJSONSerialization class",
    "fileExtension": "m",
    "genericType": "NSObject",
    "arrayType": "NSArray",
    "dataTypes": {
        "intType": "NSInteger",
        "boolType": "BOOL",
        "characterType": "char",
        "floatType": "CGFloat",
        "longType": "long",
        "doubleType": "double",
        "stringType": "NSString"
    },
    "supportsFirstLineStatement": "false",
    "staticImports": "",
    "importForEachCustomType": "",
    "importHeaderFile": "#import \"<!ModelName!>.h\"\n",
    "modelDefinition": "\n@interface <!ModelName!> ()\n@end\n@implementation <!ModelName!>\n",
    "modelStart": "",
    "modelEnd": "@end",
    "instanceVarDefinition": "",
    "hasHeaderFile": true,
    "headerFileData": {
        "staticImports": "#import <AppKit/AppKit.h>",
        "importForEachCustomType": "#import \"<!ModelName!>.h\"\n",
        "importParentHeaderFile": "#import \"<!ParentClass!>.h\"\n",
        "modelDefinition": "\n@interface <!ModelName!> : NSObject\n",
        "modelDefinitionWithParent": "\n@interface <!ModelName!> : <!ParentClass!>\n",
        "modelStart": "",
        "modelEnd": "@end",
        "instanceVarDefinition": "@property (nonatomic, strong) <!VarType!> * <!VarName!>;\n",
        "instanceVarWithSpeicalDefinition": "@property (nonatomic, assign) <!VarType!> <!VarName!>;\n",
        "typesNeedSpecialDefinition": [
            "NSInteger",
            "BOOL",
            "char",
            "CGFloat",
            "double",
            "long"
        ],
        "headerFileExtension": "h",
        "constructorSignatures": [
            "-(instancetype)initWithDictionary:(NSDictionary *)dictionary;\n"
        ],
        "utilityMethodSignatures": [
            "-(NSDictionary *)toDictionary;\n"
        ]
    },
    "wordsToRemoveToGetArrayElementsType": [
        "NSArray",
        "NSMutableArray"
    ],
    "basicTypesWithSpecialFetchingNeeds": [
        "NSInteger",
        "BOOL",
        "char",
        "CGFloat",
        "double",
        "long"
    ],
    "basicTypesWithSpecialFetchingNeedsReplacements": [
        "integerValue",
        "boolValue",
        "charValue",
        "floatValue",
        "doubleValue",
        "longValue"
    ],
    "basicTypesWithSpecialStoringNeeds": [
        "NSInteger",
        "BOOL",
        "char",
        "CGFloat",
        "double",
        "long"
    ],
    "constructors": [
        {
            "comment": "\n/**\n * Instantiate the instance using the passed dictionary values to set the properties values\n */\n",
            "signature": "\n-(instancetype)initWithDictionary:(NSDictionary *)dictionary\n",
            "bodyStart": "{\n\tself = [super init];",
            "bodyEnd": "\n\treturn self;\n}\n",
            "fetchBasicTypePropertyFromMap": "\n\tif(![dictionary[@\"<!JsonKeyName!>\"] isKindOfClass:[NSNull class]]){\n\t\tself.<!VarName!> = dictionary[@\"<!JsonKeyName!>\"];\n\t}\n",
            "fetchBasicTypeWithSpecialNeedsPropertyFromMap": "\n\tif(![dictionary[@\"<!JsonKeyName!>\"] isKindOfClass:[NSNull class]]){\n\t\tself.<!VarName!> = [dictionary[@\"<!JsonKeyName!>\"] <!VarBasicTypeReplacement!>];\n\t}\n",
            "fetchCustomTypePropertyFromMap": "\n\tif(![dictionary[@\"<!JsonKeyName!>\"] isKindOfClass:[NSNull class]]){\n\t\tself.<!VarName!> = [[<!VarType!> alloc] initWithDictionary:dictionary[@\"<!JsonKeyName!>\"]];\n\t}\n",
            "fetchArrayOfCustomTypePropertyFromMap": "\n\tif(dictionary[@\"<!JsonKeyName!>\"] != nil && [dictionary[@\"<!JsonKeyName!>\"] isKindOfClass:[NSArray class]]){\n\t\tNSArray * <!VarName!>Dictionaries = dictionary[@\"<!JsonKeyName!>\"];\n\t\tNSMutableArray * <!VarName!>Items = [NSMutableArray array];\n\t\tfor(NSDictionary * <!VarName!>Dictionary in <!VarName!>Dictionaries){\n\t\t\t<!ElementType!> * <!VarName!>Item = [[<!ElementType!> alloc] initWithDictionary:<!VarName!>Dictionary];\n\t\t\t[<!VarName!>Items addObject:<!VarName!>Item];\n\t\t}\n\t\tself.<!VarName!> = <!VarName!>Items;\n\t}"
        }
    ],
    "utilityMethods": [
        {
            "comment": "\n/**\n * Returns all the available property values in the form of NSDictionary object where the key is the approperiate json key and the value is the value of the corresponding property\n */\n",
            "signature": "-(NSDictionary *)toDictionary",
            "bodyStart": "\n{\n",
            "bodyEnd": "\n}\n",
            "body": "\tNSMutableDictionary * dictionary = [NSMutableDictionary dictionary];\n",
            "forEachPropertyWithSpecialStoringNeeds": "\tdictionary[@\"<!JsonKeyName!>\"] = @(self.<!VarName!>);\n",
            "forEachProperty": "\tif(self.<!VarName!> != nil){\n\t\tdictionary[@\"<!JsonKeyName!>\"] = self.<!VarName!>;\n\t}\n",
            "forEachCustomTypeProperty": "\tif(self.<!VarName!> != nil){\n\t\tdictionary[@\"<!JsonKeyName!>\"] = [self.<!VarName!> toDictionary];\n\t}\n",
            "forEachArrayOfCustomTypeProperty": "\tif(self.<!VarName!> != nil){\n\t\tNSMutableArray * dictionaryElements = [NSMutableArray array];\n\t\tfor(<!ElementType!> * <!VarName!>Element in self.<!VarName!>){\n\t\t\t[dictionaryElements addObject:[<!VarName!>Element toDictionary]];\n\t\t}\n\t\tdictionary[@\"<!JsonKeyName!>\"] = dictionaryElements;\n\t}\n",
            "returnStatement": "\treturn dictionary;\n"
        }
    ]
}